/*
 * Copyright (c) The One True Way 2023. Apache License 2.0. The authors accept no liability, 0 nada for the use of this software.  It is offered "As IS"  Have fun with it!!
 */

package models

import "gopkg.in/yaml.v3"

type Cluster struct {
	CertificateAuthorityData string `yaml:"certificate-authority-data"`
	Server                   string `yaml:"server"`
}
type Clusters struct {
	Cluster Cluster `yaml:"cluster"`
	Name    string  `yaml:"name"`
}
type Context struct {
	Cluster string `yaml:"cluster"`
	User    string `yaml:"user"`
}
type Contexts struct {
	Context Context `yaml:"context"`
	Name    string  `yaml:"name"`
}
type User struct {
	Token                 string `yaml:"token"`
	ClientCertificateData string `yaml:"client-certificate-data,omitempty"`
	ClientKeyData         string `yaml:"client-key-data,omitempty"`
}
type Users struct {
	User User   `json:"user"`
	Name string `json:"name"`
}
type KubeConfigCluster struct {
	ApiVersion     string     `yaml:"apiVersion"`
	Clusters       []Clusters `yaml:"clusters"`
	Contexts       []Contexts `yaml:"contexts"`
	CurrentContext string     `yaml:"current-context"`
	Kind           string     `yaml:"kind"`
	Users          []Users    `yaml:"users"`
}

func NewRelayKubeConfig(routeID string, relayURL string) ([]byte, error) {
	x := new(KubeConfigCluster)
	x.ApiVersion = "v1"
	x.CurrentContext = "context0"
	x.Kind = "Config"

	x.Clusters = make([]Clusters, 1)
	x.Clusters[0].Cluster.Server = relayURL
	x.Clusters[0].Cluster.CertificateAuthorityData = loadCA()
	x.Clusters[0].Name = "cluster0"
	x.Users = make([]Users, 1)
	x.Users[0].Name = "user0"
	x.Users[0].User.Token = routeID
	//x.Users[0].User.ClientCertificateData = loadClientCert()
	//x.Users[0].User.ClientKeyData = loadClientKey()
	x.Contexts = make([]Contexts, 1)
	x.Contexts[0].Name = "context0"
	x.Contexts[0].Context.User = "user0"
	x.Contexts[0].Context.Cluster = "cluster0"
	ret, err := yaml.Marshal(x)
	return ret, err
}

// loadCA gets a base 64 of the cert authority certificate
func loadCA() string {
	return "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoRENDQW13Q0NRQ01pd1VDK0hkTTB6QU5CZ2txaGtpRzl3MEJBUXNGQURDQmd6RUxNQWtHQTFVRUJoTUMKUlVNeER6QU5CZ05WQkFnTUJrMWhibUZpYVRFT01Bd0dBMVVFQnd3RlRXRnVkR0V4RkRBU0JnTlZCQW9NQzBWdQpaMmx1WldWeWFXNW5NUXd3Q2dZRFZRUUxEQU5FWlhZeERUQUxCZ05WQkFNTUJISnZiM1F4SURBZUJna3Foa2lHCjl3MEJDUUVXRVcxaGMyOXVZa0J1WlhSaGNIQXVZMjl0TUI0WERUSXpNRE15TWpFMk5UWXhNMW9YRFRJNE1ETXkKTURFMk5UWXhNMW93Z1lNeEN6QUpCZ05WQkFZVEFrVkRNUTh3RFFZRFZRUUlEQVpOWVc1aFlta3hEakFNQmdOVgpCQWNNQlUxaGJuUmhNUlF3RWdZRFZRUUtEQXRGYm1kcGJtVmxjbWx1WnpFTU1Bb0dBMVVFQ3d3RFJHVjJNUTB3CkN3WURWUVFEREFSeWIyOTBNU0F3SGdZSktvWklodmNOQVFrQkZoRnRZWE52Ym1KQWJtVjBZWEJ3TG1OdmJUQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMUkh4LzMybnZORHF6RWJTeDZXWVZjdgptT3pEcWhDVUpmd0dPbHVhU1UzTytlbkMrNFVoWkdndVR3NXl3MEQ2YXltZzJNUWdHTlRjT254V1NPeE5mS0V3ClhGa0t5UnYrVXZPOE9MeFFXYlFOUzBGNW1mZzJDNnBPc21uMG8vVmprTHloWCtYbkM0TzVjd3hkd0c0SjVvYlUKTGJNSldZb0FJVWxuK0ZkL21VSGU3bWx0RnNsRVNmNTRoS2VTYkdRc212NzBBalBoV0h6Ulh1dG9JVGR6a1NwUQp3WXB4Vm8zeWY4aUc5cDE4WHc5N1k1T1pNYzZQQTRIekFaUUduVHpmZDhRUUlVTWxzMVhwNlJJMGQ1ekpnRzNDCnpqK3BUMGdtbFlCSE00cVlsQTJjR2QyYWQ0UjlRRzZZdjE1ZXBlYU1FZkVmL2REUkFpdG1LUDFzdWtKMXhLRUMKQXdFQUFUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFYd2g1cVhLU2dqOXlNeU9NUTZwREdSSlpJb2VhNDVEdgpwdFJFR0RiOWEwS042WHhYL1BscXpPQ25lNExkem4vMzRYWHJMV2hBZTEvM3FpaGlpUER3MmM1Vjl5SWIvMW9aClBGSlVobU1tNm5lWEQ1aWRSVDdXQUxlZzljU0h1U0IyeHZxTi9hYkd4RGROSTRhZXJxNGNzc1FvaTQ2WjNVZVcKMU82YWpoSUUyYUs3eFNPT2xWdGhDV2hTa1drb20yUHIrNE80RzFkaWdyV2Z2V1hqQ2k1SnFZcUVleWExSTVMaAptU3lCeW5UZy8vVy9OQ01LTEErOUk4eitmQis0Q3ByeUJzYkVWMngyM2RWemVseHYxZkI5eCtTT2ZQOFN4MkI0CmEzZjdyaVQwUldjMFgvY293UnVpYlJSbzdhRDRMYzFqaERJaTBUSm9zZVBWY3AzSlo5NUVWUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
}

// loadClientCert  Loads the base64 of the client certificate
func loadClientCert() string {
	return "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVSRENDQXl5Z0F3SUJBZ0lKQUl6RlRkdmQyYndtTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdETVFzd0NRWUQKVlFRR0V3SkZRekVQTUEwR0ExVUVDQXdHVFdGdVlXSnBNUTR3REFZRFZRUUhEQVZOWVc1MFlURVVNQklHQTFVRQpDZ3dMUlc1bmFXNWxaWEpwYm1jeEREQUtCZ05WQkFzTUEwUmxkakVOTUFzR0ExVUVBd3dFY205dmRERWdNQjRHCkNTcUdTSWIzRFFFSkFSWVJiV0Z6YjI1aVFHNWxkR0Z3Y0M1amIyMHdIaGNOTWpNd016SXlNVGN4TmpJeFdoY04KTWpVd05qSTBNVGN4TmpJeFdqQm1NUXN3Q1FZRFZRUUdFd0pGUXpFUE1BMEdBMVVFQ0F3R1RXRnVZV0pwTVE0dwpEQVlEVlFRSERBVk5ZVzUwWVRFVU1CSUdBMVVFQ2d3TFJXNW5hVzVsWlhKcGJtY3hEREFLQmdOVkJBc01BMFJsCmRqRVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUFxWFBBcVMvNVRZNWdmbnBZREVNd3l1bmpTYndFaU5KS01KMDZSSnF3ZGdadGtjaDN0azh2d0N4dgpVa2JST0phZitzTWx6SG1TQTNwZXNOTUtncXVTZG5aKy83UzhDZTVkWXVoVDZ2anFzNjZIZGllK2cySW05UTRUCjhHTUZxaXdZd05TdytwYnk5UVVCRzIxc1hpTUFEN3dvQkhJS2ZGa01paVFZTHdBVjhLOFozSEhLNWdFdU5rTXoKNjViZTF2MTlaMkZJZzJCeGxEOGQvckxGbUIxNW10eVZQaGtKTzhWTjJxbnNBb3dXVC9MaVcvQk15RGlxS3Y5agpIV3ZqUG1QSDQ1T0p5Yi9ERW96WWF5SGhTOXRhbmc2REFHUytsMGNmdTVaTUlrRloyNHdwVFR6VHkrSk0xaGVECmVZNys0dUlzZytpbXg3eUxKcEpLMjZPQ0dHalJ3d0lEQVFBQm80SFdNSUhUTUlHaUJnTlZIU01FZ1pvd2daZWgKZ1lta2dZWXdnWU14Q3pBSkJnTlZCQVlUQWtWRE1ROHdEUVlEVlFRSURBWk5ZVzVoWW1reERqQU1CZ05WQkFjTQpCVTFoYm5SaE1SUXdFZ1lEVlFRS0RBdEZibWRwYm1WbGNtbHVaekVNTUFvR0ExVUVDd3dEUkdWMk1RMHdDd1lEClZRUUREQVJ5YjI5ME1TQXdIZ1lKS29aSWh2Y05BUWtCRmhGdFlYTnZibUpBYm1WMFlYQndMbU52YllJSkFJeUwKQlFMNGQwelRNQWtHQTFVZEV3UUNNQUF3Q3dZRFZSMFBCQVFEQWdUd01CUUdBMVVkRVFRTk1BdUNDV3h2WTJGcwphRzl6ZERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVBtMmRiNUp5dm5FRVljWUFaeWNqQlQwYVZ3dGNmL2dQCnBYOWpFUmF5R0R1WHpFY3V1bWI0M0dwdjI1NlJ0S2d1azNyYXBtNlgraS80ZkR6RFdUZVgwWEdMbFBaZTRyTTcKUHNpKzJTSFZTaVJRbmxrWVZSM3VKZmZEc1JsMDVoNXhhcHhScEFsZk5kN2RSa092NURYbFRyZjNnTWh2T3d0Nwo1YVRJMVQwZEhrVjV1VFBpcU5nK3V1c2E1WlVjajFScTAvWSt6S0tQMXhGVjM0R0I1T1VmSUZGWGRwenRVby9QCjRuZGFyOFM2cndYWGhtR1hkMmM3cDFjT2kyZHZMbUtGbjNKUitucWVSck0zSTNtQ1NwSkVGQ1N4Qk5JTkxNcjIKYm83VVN5dkUzL0NiNlJzVEJtZ2hGTE5ORThUYWpnV2duVWZZMnVkMnh1dlk5UW1LL3RRVjFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
}

// loadClientKey gets the base64 of the client key
func loadClientKey() string {
	return "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVhQQXFTLzVUWTVnZm5wWURFTXd5dW5qU2J3RWlOSktNSjA2Ukpxd2RnWnRrY2gzCnRrOHZ3Q3h2VWtiUk9KYWYrc01sekhtU0EzcGVzTk1LZ3F1U2RuWisvN1M4Q2U1ZFl1aFQ2dmpxczY2SGRpZSsKZzJJbTlRNFQ4R01GcWl3WXdOU3crcGJ5OVFVQkcyMXNYaU1BRDd3b0JISUtmRmtNaWlRWUx3QVY4SzhaM0hISwo1Z0V1TmtNejY1YmUxdjE5WjJGSWcyQnhsRDhkL3JMRm1CMTVtdHlWUGhrSk84Vk4ycW5zQW93V1QvTGlXL0JNCnlEaXFLdjlqSFd2alBtUEg0NU9KeWIvREVvellheUhoUzl0YW5nNkRBR1MrbDBjZnU1Wk1Ja0ZaMjR3cFRUelQKeStKTTFoZURlWTcrNHVJc2craW14N3lMSnBKSzI2T0NHR2pSd3dJREFRQUJBb0lCQUZsOWN5c20xZCs2cUlWRApNWXJRVlUxa2RnK3p4eVZIQWIxbzI2UHRtZkhLOVVTL2ZWRi93blVZUW5aT1JpSS9raCtKdmtXZGtwcFpudlo5CmpoaHlhZmc4SGxnRzZDUEtpZkU1UjFCWnd3Ry8wM1I0Q3VveUJPYjRWMWxsd2xFYjFyckgyT3VPbXFNQjBKTGUKbUJPaklsNHMvV2xUbk93TXowMkpRR2hhQUR4S01TbFRYbGxuQ0s3ZVErQXhpdWtINDBoS3FWN0o0Zm9oeWhuMQpTUE9jS2lWb1grVmNTOGVUWklmUXdGaHhHZlVsNkY1VEpaWFpRdjhIVkEwWlBvRE9KU1FJTVBHQjlyb0lGMWlaCndsSnJYWTQ4WTg0ckRlNEI3b3RCenFHRGxhRDNPbENBYWdRTUw0QWNmWExTalhoUWpZS0gvK2I3VCtsT2VPc0gKako1cmZRRUNnWUVBMWVDdXB6VitNSGhxckZkdlNiYnBoSjQ2djAxOEJ2aEhQUFZ2VjdlYWU0RjZLWS9oSkMvVQpwSERWMFp5c0xkbHZMM0p5QTFRdTZEbkJkc1dFdXAzbzJDM2VVTFdXbWdZblRhZ0xtYW83UUNMV3VyY2toZThFClJyYmxuU24yVTdIUldENUZxL2JxZktQNXU1dVlnYS80aytsR3haVml0NFVFd1ZoZHhxaFNsNEVDZ1lFQXl0TTMKMmQvTGJLVXplcENkc2tOajd0ZnhwV3JiVGtJbG9jeE1kQjdUaHdMcTNtNkN6RWJZTDUwaXl3L09SWmtGSkIwYQpLeTN4VS8rdGJMeGxuTEU0bVAzMFVwZHJiSDFiYzA5Z0ltVmw2SFJUSkVXdDdPVUFqSVBYTm04czMvcHVKSHhKCm9Vc3ZSb2V4bmlCV3hrRklvS2FhZnFrbTJkRStIS21MdUd1WXEwTUNnWUIyVVNCdGNlTklMeVZjQjlhUjRmVlgKSHkyQ3JQdkM0MUNOZ1gxQitsa2tuK0VUNHZ0NnlGY0xUVHlNQSs4Z1Fod0hGSG5NSzZMelp4Z0dlNGhNc0pTaQpHdVhVb2xBWkR2UnBPbUNJZHFybWRSOXpGV1BJRUF5K2plbUNRemQ0MzNMZkxUdmZ3TzNCVy9rSWR6QXI5a3crCmp4dE9yTEI2czhTSXJUamJjRHlZZ1FLQmdRQ09xODBad1ViREFlSVlVU25jZjNNSVMzWjd1WkxTbGMwSzV6N1EKWCs3RGhkWFk2VHV3bmhUc1NVaDBOb1lPaHZrSzBqM2FLZE1jRnpuU3h5TmkrWGFxaDlrWlQ5SU0ycEU5cDVRawpIZGQxa0gzN2dkZzZUMHYzaTdZVFlGamNwTGhkaWQveFNZWFR3eGU1OTEyU3o5RmEwRmJVeWYrK01HWFVtNTdnCjl5N0pLUUtCZ1FDek5DU1R5ODJhbEdGN2ErMDYwb1V6c29Sa3JqcjRXZWZFbHM0RnZGdDRUMmROMW9lS0QrcTMKQnhWaE82VDBnVTYxdUZ0NysxY1hYeHltUm94MWxucm96ckFLaUtWV3dDYTA0bHNCZnRNQTNzVzVUb3JuZHc5WQpGMjdESStZQzlNelJIYVpkQVZvMTl3VEVES3dCY004Uzl4ek1ZTUhETFBhUUE5cndBeEh3Nnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
}
