name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    branches: '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        make justgenerate
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: |
        make buildlinux
    - name: Upload bridgeclient from the build job
      uses: actions/upload-artifact@v2
      with:
        name: bridgeclient_x64_linux
        path: out/bridgeclient_x64_linux
    - name: Upload echo_main from the build job
      uses: actions/upload-artifact@v2
      with:
        name: echo_main_x64_linux
        path: out/echo_main_x64_linux
    - name: Upload echo_client from the build job
      uses: actions/upload-artifact@v2
      with:
        name: echo_client_x64_linux
        path: out/echo_client_x64_linux
    - name: Unit / L1 Test
      run: |
        make l1
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: out/report_*.xml

  server:
    name: Server
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get the IP of the server
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Save the IP of the server
        run: echo ${{ steps.ip.outputs.ipv4 }} > server_ip.txt
      - name: Upload the IP of the server
        uses: actions/upload-artifact@v2
        with:
          name: server_ip
          path: server_ip.txt
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: |
          make justgenerate
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Download echo_main from the build job
        uses: actions/download-artifact@v2
        with:
          name: echo_main_x64_linux
      - name: Install nats
        run: |
          docker pull nats
          docker run -d -p 4222:4222 nats:latest
      - name: Install redis
        run: |
          docker pull redis
          docker run -d -p 6379:6379 redis:latest
      - name: Run the server
        run: |
          chmod +x echo_main_x64_linux
          go test -v apps/bridge_server_test.go 2>&1 &
          PID=$!
          echo "Server PID $PID"
          ./echo_main_x64_linux "Test message" &> test_response.txt &
          sleep 30
          kill -9 $PID
      - name: Upload the echo response
        uses: actions/upload-artifact@v2
        with:
          name: echo_response
          path: test_response.txt

  client:
    name: Client
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Sleep to wait for the server_ip artifact
        run: sleep 30
      - name: Download bridgeclient from the build job
        uses: actions/download-artifact@v2
        with:
          name: bridgeclient_x64_linux
      - name: Download echo_client from the build job
        uses: actions/download-artifact@v2
        with:
          name: echo_client_x64_linux
      - name: Download the server_ip from the build job
        uses: actions/download-artifact@v2
        with:
          name: server_ip
      - name: Install nats
        run: |
          docker pull nats
          docker run -d -p 4222:4222 nats:latest
      - name: Run the client
        run: |
          value=`cat server_ip.txt`
          export CLOUD_BRIDGE_URL="http://${value}"
          chmod +x bridgeclient_x64_linux
          chmod +x echo_client_x64_linux
          ./bridgeclient_x64_linux &
          ./echo_client_x64_linux &
      - name: Sleep to wait for the server message
        run: sleep 30
      - name: Kill the server
        run: |
          value=`cat server_ip.txt`

  echotest:
    name: Check echo response
    needs: Server
    runs-on: ubuntu-latest
    steps:
      - name: Download echo_response from the build job
        uses: actions/download-artifact@v2
        with:
          name: echo_response
      - name: Check the echo response
        run: cat test_response.txt
